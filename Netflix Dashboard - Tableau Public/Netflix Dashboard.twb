<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20243.24.1010.1014                               -->
<workbook original-version='18.1' source-build='2024.3.0 (20243.24.1010.1014)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <_.fcp.IndividualControlFormatting.true...IndividualControlFormatting />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style>
    <style-rule element='gridline'>
      <format attr='line-visibility' value='off' />
    </style-rule>
    <style-rule element='zeroline'>
      <format attr='line-visibility' value='off' />
    </style-rule>
  </style>
  <datasources>
    <datasource caption='netflix_titles.csv+ (Multiple Connections)' inline='true' name='federated.13hpej81n3q4lw1ajqabb0ix7yp7' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='netflix_titles' name='textscan.0xj7jmu0rlhxsw155jv4017sfq03'>
            <connection class='textscan' directory='/Users/juancarlosfazleal/Downloads' filename='netflix_titles.csv' password='' server='' />
          </named-connection>
          <named-connection caption='Radial Bar chart values' name='textscan.0v3tfjk1rrnu4217h5a8712ydgkr'>
            <connection class='textscan' directory='/Users/juancarlosfazleal/Downloads' filename='Radial Bar chart values.txt' password='' server='' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='1' />
              <expression op='1' />
            </expression>
          </clause>
          <relation connection='textscan.0xj7jmu0rlhxsw155jv4017sfq03' name='netflix_titles.csv' table='[netflix_titles#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='show_id' ordinal='0' />
              <column datatype='string' name='type' ordinal='1' />
              <column datatype='string' name='title' ordinal='2' />
              <column datatype='string' name='director' ordinal='3' />
              <column datatype='string' name='cast' ordinal='4' />
              <column datatype='string' name='country' ordinal='5' />
              <column datatype='date' name='date_added' ordinal='6' />
              <column datatype='integer' name='release_year' ordinal='7' />
              <column datatype='string' name='rating' ordinal='8' />
              <column datatype='string' name='duration' ordinal='9' />
              <column datatype='string' name='listed_in' ordinal='10' />
              <column datatype='string' name='description' ordinal='11' />
            </columns>
          </relation>
          <relation connection='textscan.0v3tfjk1rrnu4217h5a8712ydgkr' name='Radial Bar chart values.txt' table='[Radial Bar chart values#txt]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US'>
              <column datatype='integer' name='Value' ordinal='0' />
            </columns>
          </relation>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[netflix_titles.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Radial Bar chart values.txt]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>show_id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[show_id]</local-name>
            <parent-name>[netflix_titles.csv]</parent-name>
            <remote-alias>show_id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[netflix_titles.csv_AB722959526345A1B3BEA3B9C28BF15E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[type]</local-name>
            <parent-name>[netflix_titles.csv]</parent-name>
            <remote-alias>type</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[netflix_titles.csv_AB722959526345A1B3BEA3B9C28BF15E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>title</remote-name>
            <remote-type>129</remote-type>
            <local-name>[title]</local-name>
            <parent-name>[netflix_titles.csv]</parent-name>
            <remote-alias>title</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[netflix_titles.csv_AB722959526345A1B3BEA3B9C28BF15E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>director</remote-name>
            <remote-type>129</remote-type>
            <local-name>[director]</local-name>
            <parent-name>[netflix_titles.csv]</parent-name>
            <remote-alias>director</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[netflix_titles.csv_AB722959526345A1B3BEA3B9C28BF15E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cast</remote-name>
            <remote-type>129</remote-type>
            <local-name>[cast]</local-name>
            <parent-name>[netflix_titles.csv]</parent-name>
            <remote-alias>cast</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[netflix_titles.csv_AB722959526345A1B3BEA3B9C28BF15E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[netflix_titles.csv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[netflix_titles.csv_AB722959526345A1B3BEA3B9C28BF15E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date_added</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date_added]</local-name>
            <parent-name>[netflix_titles.csv]</parent-name>
            <remote-alias>date_added</remote-alias>
            <ordinal>6</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <object-id>[netflix_titles.csv_AB722959526345A1B3BEA3B9C28BF15E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>release_year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[release_year]</local-name>
            <parent-name>[netflix_titles.csv]</parent-name>
            <remote-alias>release_year</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[netflix_titles.csv_AB722959526345A1B3BEA3B9C28BF15E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rating</remote-name>
            <remote-type>129</remote-type>
            <local-name>[rating]</local-name>
            <parent-name>[netflix_titles.csv]</parent-name>
            <remote-alias>rating</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[netflix_titles.csv_AB722959526345A1B3BEA3B9C28BF15E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>duration</remote-name>
            <remote-type>129</remote-type>
            <local-name>[duration]</local-name>
            <parent-name>[netflix_titles.csv]</parent-name>
            <remote-alias>duration</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[netflix_titles.csv_AB722959526345A1B3BEA3B9C28BF15E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>listed_in</remote-name>
            <remote-type>129</remote-type>
            <local-name>[listed_in]</local-name>
            <parent-name>[netflix_titles.csv]</parent-name>
            <remote-alias>listed_in</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[netflix_titles.csv_AB722959526345A1B3BEA3B9C28BF15E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>description</remote-name>
            <remote-type>129</remote-type>
            <local-name>[description]</local-name>
            <parent-name>[netflix_titles.csv]</parent-name>
            <remote-alias>description</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[netflix_titles.csv_AB722959526345A1B3BEA3B9C28BF15E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Value</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Value]</local-name>
            <parent-name>[Radial Bar chart values.txt]</parent-name>
            <remote-alias>Value</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[netflix_titles.csv_AB722959526345A1B3BEA3B9C28BF15E]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Total ratings' datatype='integer' name='[Calculation_497858872676581378]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD([title])' />
      </column>
      <column caption='My_index' datatype='integer' name='[Calculation_497858872676974595]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='INDEX()-1'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='My_total' datatype='integer' name='[Calculation_497858872677117956]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_MAX([Calculation_497858872676581378])'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='My_rank' datatype='integer' name='[Calculation_497858872677216261]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK_UNIQUE([Calculation_497858872677117956], &apos;asc&apos;)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Percentage' datatype='real' name='[Calculation_497858872677634057]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_497858872677117956]/[My_total (copy)_497858872677421062]'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='X' datatype='real' name='[Calculation_497858872677781514]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COS(RADIANS([Calculation_497858872676974595]*[Calculation_497858872677634057]))*[Calculation_497858872677216261]'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Y' datatype='real' name='[Calculation_497858872678019083]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SIN(RADIANS([Calculation_497858872676974595]*[Calculation_497858872677634057]))*[Calculation_497858872677216261]'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='My_total_max' datatype='integer' name='[My_total (copy)_497858872677421062]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_MAX([Calculation_497858872676581378])'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column aggregation='None' caption='Path' datatype='integer' name='[Value (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='0' formula='[Value]' peg='0' size='1' />
      </column>
      <column datatype='integer' name='[Value]' role='measure' type='quantitative' />
      <column caption='netflix_titles.csv' datatype='table' name='[__tableau_internal_object_id__].[netflix_titles.csv_AB722959526345A1B3BEA3B9C28BF15E]' role='measure' type='quantitative' />
      <column caption='Cast' datatype='string' name='[cast]' role='dimension' type='nominal' />
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Date Added' datatype='date' name='[date_added]' role='dimension' type='ordinal' />
      <column caption='Description' datatype='string' name='[description]' role='dimension' type='nominal' />
      <column caption='Director' datatype='string' name='[director]' role='dimension' type='nominal' />
      <column caption='Duration' datatype='string' name='[duration]' role='dimension' type='nominal' />
      <column caption='Listed In' datatype='string' name='[listed_in]' role='dimension' type='nominal' />
      <column caption='Rating' datatype='string' name='[rating]' role='dimension' type='nominal' />
      <column caption='Release Year' datatype='integer' name='[release_year]' role='dimension' type='quantitative' />
      <column caption='Show Id' datatype='string' name='[show_id]' role='dimension' type='nominal' />
      <column caption='Title' datatype='string' name='[title]' role='dimension' type='nominal' />
      <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
      <column-instance column='[rating]' derivation='None' name='[none:rating:nk]' pivot='key' type='nominal' />
      <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='/var/folders/_s/crcdflsj6c328p01dpn0sz340000gn/T/tableau-temp/#TableauTemp_11foydi1dtrm7z10wi8pm01tm1tn.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='10/26/2024 04:44:13 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>show_id</remote-name>
              <remote-type>129</remote-type>
              <local-name>[show_id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>show_id</remote-alias>
              <ordinal>0</ordinal>
              <family>netflix_titles.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6397</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[netflix_titles.csv_AB722959526345A1B3BEA3B9C28BF15E]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>type</remote-alias>
              <ordinal>1</ordinal>
              <family>netflix_titles.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[netflix_titles.csv_AB722959526345A1B3BEA3B9C28BF15E]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>title</remote-name>
              <remote-type>129</remote-type>
              <local-name>[title]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>title</remote-alias>
              <ordinal>2</ordinal>
              <family>netflix_titles.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6397</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[netflix_titles.csv_AB722959526345A1B3BEA3B9C28BF15E]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>director</remote-name>
              <remote-type>129</remote-type>
              <local-name>[director]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>director</remote-alias>
              <ordinal>3</ordinal>
              <family>netflix_titles.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3585</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[netflix_titles.csv_AB722959526345A1B3BEA3B9C28BF15E]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cast</remote-name>
              <remote-type>129</remote-type>
              <local-name>[cast]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cast</remote-alias>
              <ordinal>4</ordinal>
              <family>netflix_titles.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5435</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[netflix_titles.csv_AB722959526345A1B3BEA3B9C28BF15E]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>country</remote-alias>
              <ordinal>5</ordinal>
              <family>netflix_titles.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>474</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[netflix_titles.csv_AB722959526345A1B3BEA3B9C28BF15E]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date_added</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date_added]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date_added</remote-alias>
              <ordinal>6</ordinal>
              <family>netflix_titles.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1780</approx-count>
              <contains-null>true</contains-null>
              <object-id>[netflix_titles.csv_AB722959526345A1B3BEA3B9C28BF15E]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>release_year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[release_year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>release_year</remote-alias>
              <ordinal>7</ordinal>
              <family>netflix_titles.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>78</approx-count>
              <contains-null>true</contains-null>
              <object-id>[netflix_titles.csv_AB722959526345A1B3BEA3B9C28BF15E]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>rating</remote-name>
              <remote-type>129</remote-type>
              <local-name>[rating]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>rating</remote-alias>
              <ordinal>8</ordinal>
              <family>netflix_titles.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>14</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[netflix_titles.csv_AB722959526345A1B3BEA3B9C28BF15E]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>duration</remote-name>
              <remote-type>129</remote-type>
              <local-name>[duration]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>duration</remote-alias>
              <ordinal>9</ordinal>
              <family>netflix_titles.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>270</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[netflix_titles.csv_AB722959526345A1B3BEA3B9C28BF15E]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>listed_in</remote-name>
              <remote-type>129</remote-type>
              <local-name>[listed_in]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>listed_in</remote-alias>
              <ordinal>10</ordinal>
              <family>netflix_titles.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>521</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[netflix_titles.csv_AB722959526345A1B3BEA3B9C28BF15E]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>description</remote-name>
              <remote-type>129</remote-type>
              <local-name>[description]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>description</remote-alias>
              <ordinal>11</ordinal>
              <family>netflix_titles.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6397</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[netflix_titles.csv_AB722959526345A1B3BEA3B9C28BF15E]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Value</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Value]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Value</remote-alias>
              <ordinal>12</ordinal>
              <family>Radial Bar chart values.txt</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <object-id>[netflix_titles.csv_AB722959526345A1B3BEA3B9C28BF15E]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:rating:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;G&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;NC-17&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;66 min&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;TV-Y7-FV&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;NR&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;UR&quot;</bucket>
            </map>
            <map to='#e50914'>
              <bucket>&quot;PG&quot;</bucket>
            </map>
            <map to='#e50914'>
              <bucket>&quot;PG-13&quot;</bucket>
            </map>
            <map to='#e50914'>
              <bucket>&quot;R&quot;</bucket>
            </map>
            <map to='#e50914'>
              <bucket>&quot;TV-14&quot;</bucket>
            </map>
            <map to='#e50914'>
              <bucket>&quot;TV-G&quot;</bucket>
            </map>
            <map to='#e50914'>
              <bucket>&quot;TV-MA&quot;</bucket>
            </map>
            <map to='#e50914'>
              <bucket>&quot;TV-PG&quot;</bucket>
            </map>
            <map to='#e50914'>
              <bucket>&quot;TV-Y&quot;</bucket>
            </map>
            <map to='#e50914'>
              <bucket>&quot;TV-Y7&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;74 min&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;84 min&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:type:nk]' palette='blue_10_0' type='palette'>
            <map to='#af0914'>
              <bucket>&quot;TV Show&quot;</bucket>
            </map>
            <map to='#e50914'>
              <bucket>&quot;Movie&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='netflix_titles.csv' id='netflix_titles.csv_AB722959526345A1B3BEA3B9C28BF15E'>
            <properties context=''>
              <relation join='inner' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='1' />
                    <expression op='1' />
                  </expression>
                </clause>
                <relation connection='textscan.0xj7jmu0rlhxsw155jv4017sfq03' name='netflix_titles.csv' table='[netflix_titles#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='string' name='show_id' ordinal='0' />
                    <column datatype='string' name='type' ordinal='1' />
                    <column datatype='string' name='title' ordinal='2' />
                    <column datatype='string' name='director' ordinal='3' />
                    <column datatype='string' name='cast' ordinal='4' />
                    <column datatype='string' name='country' ordinal='5' />
                    <column datatype='date' name='date_added' ordinal='6' />
                    <column datatype='integer' name='release_year' ordinal='7' />
                    <column datatype='string' name='rating' ordinal='8' />
                    <column datatype='string' name='duration' ordinal='9' />
                    <column datatype='string' name='listed_in' ordinal='10' />
                    <column datatype='string' name='description' ordinal='11' />
                  </columns>
                </relation>
                <relation connection='textscan.0v3tfjk1rrnu4217h5a8712ydgkr' name='Radial Bar chart values.txt' table='[Radial Bar chart values#txt]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US'>
                    <column datatype='integer' name='Value' ordinal='0' />
                  </columns>
                </relation>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1_A0C3F411848947C99F380712FB91EDA4]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Shows by type' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Type' />
        <param name='target' value='Shows by type' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Cast'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='netflix_titles.csv+ (Multiple Connections)' name='federated.13hpej81n3q4lw1ajqabb0ix7yp7' />
          </datasources>
          <datasource-dependencies datasource='federated.13hpej81n3q4lw1ajqabb0ix7yp7'>
            <column caption='Cast' datatype='string' name='[cast]' role='dimension' type='nominal' />
            <column-instance column='[cast]' derivation='None' name='[none:cast:nk]' pivot='key' type='nominal' />
            <column-instance column='[title]' derivation='None' name='[none:title:nk]' pivot='key' type='nominal' />
            <column caption='Title' datatype='string' name='[title]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.13hpej81n3q4lw1ajqabb0ix7yp7].[none:title:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:title:nk]' member='&quot;1 Chance 2 Dance&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.13hpej81n3q4lw1ajqabb0ix7yp7].[none:title:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#ffffff' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-color' value='#ffffff' />
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#ffffff' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-color' scope='rows' value='#ffffff' />
            <format attr='line-visibility' scope='rows' value='on' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='stroke-color' scope='cols' value='#ffffff' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
          </style-rule>
          <style-rule element='title'>
            <format attr='border-width' value='1' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#ffffff' />
          </style-rule>
          <_.fcp.IndividualControlFormatting.true...style-rule element='quick-filter'>
            <_.fcp.IndividualControlFormatting.true...format attr='color' field='[federated.13hpej81n3q4lw1ajqabb0ix7yp7].[none:title:nk]' value='#000000' />
          </_.fcp.IndividualControlFormatting.true...style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.13hpej81n3q4lw1ajqabb0ix7yp7].[none:cast:nk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontsize='10'>Cast</run>
                <run><![CDATA[
<[federated.13hpej81n3q4lw1ajqabb0ix7yp7].[none:cast:nk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-color' value='#00a8e1' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{8722A575-781A-45B4-9DE5-6B67725BF5C5}' />
    </worksheet>
    <worksheet name='Description'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='netflix_titles.csv+ (Multiple Connections)' name='federated.13hpej81n3q4lw1ajqabb0ix7yp7' />
          </datasources>
          <datasource-dependencies datasource='federated.13hpej81n3q4lw1ajqabb0ix7yp7'>
            <column caption='Description' datatype='string' name='[description]' role='dimension' type='nominal' />
            <column-instance column='[description]' derivation='None' name='[none:description:nk]' pivot='key' type='nominal' />
            <column-instance column='[title]' derivation='None' name='[none:title:nk]' pivot='key' type='nominal' />
            <column caption='Title' datatype='string' name='[title]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.13hpej81n3q4lw1ajqabb0ix7yp7].[none:title:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:title:nk]' member='&quot;1 Chance 2 Dance&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.13hpej81n3q4lw1ajqabb0ix7yp7].[none:title:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#ffffff' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-color' value='#ffffff' />
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#ffffff' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-color' scope='rows' value='#ffffff' />
            <format attr='line-visibility' scope='rows' value='on' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='stroke-color' scope='cols' value='#ffffff' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
          </style-rule>
          <style-rule element='title'>
            <format attr='border-width' value='1' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#ffffff' />
          </style-rule>
          <style-rule element='quick-filter'>
            <_.fcp.IndividualControlFormatting.true...format attr='color' field='[federated.13hpej81n3q4lw1ajqabb0ix7yp7].[none:title:nk]' value='#000000' />
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='color' value='#ffffff' />
            <format attr='font-size' value='10' />
            <format attr='text-align' value='center' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.13hpej81n3q4lw1ajqabb0ix7yp7].[none:description:nk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontsize='10'>Description</run>
                <run><![CDATA[
<[federated.13hpej81n3q4lw1ajqabb0ix7yp7].[none:description:nk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-color' value='#00a8e1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{58F65D81-5108-4EF9-8B34-17C583980BC2}' />
    </worksheet>
    <worksheet name='Duration'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='netflix_titles.csv+ (Multiple Connections)' name='federated.13hpej81n3q4lw1ajqabb0ix7yp7' />
          </datasources>
          <datasource-dependencies datasource='federated.13hpej81n3q4lw1ajqabb0ix7yp7'>
            <column caption='Duration' datatype='string' name='[duration]' role='dimension' type='nominal' />
            <column-instance column='[duration]' derivation='None' name='[none:duration:nk]' pivot='key' type='nominal' />
            <column-instance column='[title]' derivation='None' name='[none:title:nk]' pivot='key' type='nominal' />
            <column caption='Title' datatype='string' name='[title]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.13hpej81n3q4lw1ajqabb0ix7yp7].[none:title:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:title:nk]' member='&quot;1 Chance 2 Dance&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.13hpej81n3q4lw1ajqabb0ix7yp7].[none:title:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#ffffff' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-color' value='#ffffff' />
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#ffffff' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-color' scope='rows' value='#ffffff' />
            <format attr='line-visibility' scope='rows' value='on' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='stroke-color' scope='cols' value='#ffffff' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
          </style-rule>
          <style-rule element='title'>
            <format attr='border-width' value='1' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#ffffff' />
          </style-rule>
          <_.fcp.IndividualControlFormatting.true...style-rule element='quick-filter'>
            <_.fcp.IndividualControlFormatting.true...format attr='color' field='[federated.13hpej81n3q4lw1ajqabb0ix7yp7].[none:title:nk]' value='#000000' />
          </_.fcp.IndividualControlFormatting.true...style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.13hpej81n3q4lw1ajqabb0ix7yp7].[none:duration:nk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontsize='10'>Duration</run>
                <run><![CDATA[
<[federated.13hpej81n3q4lw1ajqabb0ix7yp7].[none:duration:nk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-color' value='#00a8e1' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{8A87E48F-B2A3-462F-8C73-D55701C3450B}' />
    </worksheet>
    <worksheet name='Genre'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='netflix_titles.csv+ (Multiple Connections)' name='federated.13hpej81n3q4lw1ajqabb0ix7yp7' />
          </datasources>
          <datasource-dependencies datasource='federated.13hpej81n3q4lw1ajqabb0ix7yp7'>
            <column caption='Listed In' datatype='string' name='[listed_in]' role='dimension' type='nominal' />
            <column-instance column='[listed_in]' derivation='None' name='[none:listed_in:nk]' pivot='key' type='nominal' />
            <column-instance column='[title]' derivation='None' name='[none:title:nk]' pivot='key' type='nominal' />
            <column caption='Title' datatype='string' name='[title]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.13hpej81n3q4lw1ajqabb0ix7yp7].[none:title:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:title:nk]' member='&quot;1 Chance 2 Dance&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.13hpej81n3q4lw1ajqabb0ix7yp7].[none:title:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#ffffff' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-color' value='#ffffff' />
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#ffffff' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-color' scope='rows' value='#ffffff' />
            <format attr='line-visibility' scope='rows' value='on' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='stroke-color' scope='cols' value='#ffffff' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
          </style-rule>
          <style-rule element='title'>
            <format attr='border-width' value='1' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#ffffff' />
          </style-rule>
          <_.fcp.IndividualControlFormatting.true...style-rule element='quick-filter'>
            <_.fcp.IndividualControlFormatting.true...format attr='color' field='[federated.13hpej81n3q4lw1ajqabb0ix7yp7].[none:title:nk]' value='#000000' />
          </_.fcp.IndividualControlFormatting.true...style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.13hpej81n3q4lw1ajqabb0ix7yp7].[none:listed_in:nk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontsize='10'>Genre</run>
                <run><![CDATA[
<[federated.13hpej81n3q4lw1ajqabb0ix7yp7].[none:listed_in:nk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-color' value='#00a8e1' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{FA16DBA5-76D5-4F9E-8927-D0DC9F94C30E}' />
    </worksheet>
    <worksheet name='Release year'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='netflix_titles.csv+ (Multiple Connections)' name='federated.13hpej81n3q4lw1ajqabb0ix7yp7' />
          </datasources>
          <datasource-dependencies datasource='federated.13hpej81n3q4lw1ajqabb0ix7yp7'>
            <column-instance column='[release_year]' derivation='None' name='[none:release_year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[title]' derivation='None' name='[none:title:nk]' pivot='key' type='nominal' />
            <column caption='Release Year' datatype='integer' name='[release_year]' role='dimension' type='quantitative' />
            <column caption='Title' datatype='string' name='[title]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.13hpej81n3q4lw1ajqabb0ix7yp7].[none:title:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:title:nk]' member='&quot;1 Chance 2 Dance&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.13hpej81n3q4lw1ajqabb0ix7yp7].[none:title:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#ffffff' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-color' value='#ffffff' />
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#ffffff' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-color' scope='rows' value='#ffffff' />
            <format attr='line-visibility' scope='rows' value='on' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='stroke-color' scope='cols' value='#ffffff' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
          </style-rule>
          <style-rule element='title'>
            <format attr='border-width' value='1' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#ffffff' />
          </style-rule>
          <_.fcp.IndividualControlFormatting.true...style-rule element='quick-filter'>
            <_.fcp.IndividualControlFormatting.true...format attr='color' field='[federated.13hpej81n3q4lw1ajqabb0ix7yp7].[none:title:nk]' value='#000000' />
          </_.fcp.IndividualControlFormatting.true...style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.13hpej81n3q4lw1ajqabb0ix7yp7].[none:release_year:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontsize='10'>Release year</run>
                <run><![CDATA[
<[federated.13hpej81n3q4lw1ajqabb0ix7yp7].[none:release_year:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-color' value='#00a8e1' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{CCB2ADC9-6DA5-4E0F-9071-F1A4CDA554AC}' />
    </worksheet>
    <worksheet name='Shows by release year and type'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='netflix_titles.csv+ (Multiple Connections)' name='federated.13hpej81n3q4lw1ajqabb0ix7yp7' />
          </datasources>
          <datasource-dependencies datasource='federated.13hpej81n3q4lw1ajqabb0ix7yp7'>
            <column-instance column='[show_id]' derivation='CountD' name='[ctd:show_id:qk]' pivot='key' type='quantitative' />
            <column-instance column='[release_year]' derivation='None' name='[none:release_year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column caption='Release Year' datatype='integer' name='[release_year]' role='dimension' type='quantitative' />
            <column caption='Show Id' datatype='string' name='[show_id]' role='dimension' type='nominal' />
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.13hpej81n3q4lw1ajqabb0ix7yp7].[none:release_year:qk]' field-type='quantitative' max='2022' min='1914' range-type='fixed' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.13hpej81n3q4lw1ajqabb0ix7yp7].[none:release_year:qk]' scope='cols' value='' />
            <format attr='title' class='0' field='[federated.13hpej81n3q4lw1ajqabb0ix7yp7].[ctd:show_id:qk]' scope='rows' value='' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#ffffff' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-color' value='#ffffff' />
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#ffffff' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-color' scope='rows' value='#ffffff' />
            <format attr='line-visibility' scope='rows' value='on' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='stroke-color' scope='cols' value='#ffffff' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
          </style-rule>
          <style-rule element='title'>
            <format attr='border-width' value='1' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.13hpej81n3q4lw1ajqabb0ix7yp7].[none:type:nk]' />
              <text column='[federated.13hpej81n3q4lw1ajqabb0ix7yp7].[none:type:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.13hpej81n3q4lw1ajqabb0ix7yp7].[ctd:show_id:qk]</rows>
        <cols>[federated.13hpej81n3q4lw1ajqabb0ix7yp7].[none:release_year:qk]</cols>
      </table>
      <simple-id uuid='{F1056B28-A6DB-4A21-ABC7-29E9B6ED3B7B}' />
    </worksheet>
    <worksheet name='Shows by type'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='netflix_titles.csv+ (Multiple Connections)' name='federated.13hpej81n3q4lw1ajqabb0ix7yp7' />
          </datasources>
          <datasource-dependencies datasource='federated.13hpej81n3q4lw1ajqabb0ix7yp7'>
            <column caption='0' datatype='integer' name='[Calculation_497858872682405903]' role='measure' type='quantitative' user:unnamed='Sheet 2'>
              <calculation class='tableau' formula='0' />
            </column>
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column-instance column='[title]' derivation='Count' name='[pcto:cnt:title:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_497858872682405903]' derivation='Sum' name='[sum:Calculation_497858872682405903:qk]' pivot='key' type='quantitative' />
            <column caption='Title' datatype='string' name='[title]' role='dimension' type='nominal' />
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[federated.13hpej81n3q4lw1ajqabb0ix7yp7].[sum:Calculation_497858872682405903:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='display' class='0' field='[federated.13hpej81n3q4lw1ajqabb0ix7yp7].[sum:Calculation_497858872682405903:qk]' scope='rows' value='false' />
            <format attr='display' class='1' field='[federated.13hpej81n3q4lw1ajqabb0ix7yp7].[sum:Calculation_497858872682405903:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='title'>
            <format attr='border-width' value='1' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.13hpej81n3q4lw1ajqabb0ix7yp7].[sum:Calculation_497858872682405903:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.13hpej81n3q4lw1ajqabb0ix7yp7].[none:type:nk]' />
              <size column='[federated.13hpej81n3q4lw1ajqabb0ix7yp7].[pcto:cnt:title:qk]' />
              <text column='[federated.13hpej81n3q4lw1ajqabb0ix7yp7].[none:type:nk]' />
              <text column='[federated.13hpej81n3q4lw1ajqabb0ix7yp7].[pcto:cnt:title:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='2' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.13hpej81n3q4lw1ajqabb0ix7yp7].[sum:Calculation_497858872682405903:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.3953038454055786' />
                <format attr='mark-color' value='#19222d' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.13hpej81n3q4lw1ajqabb0ix7yp7].[sum:Calculation_497858872682405903:qk] + [federated.13hpej81n3q4lw1ajqabb0ix7yp7].[sum:Calculation_497858872682405903:qk])</rows>
        <cols />
      </table>
      <simple-id uuid='{D90CE06F-4D11-41BA-B04A-BB3FD266E6F2}' />
    </worksheet>
    <worksheet name='Top 10 genre'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='netflix_titles.csv+ (Multiple Connections)' name='federated.13hpej81n3q4lw1ajqabb0ix7yp7' />
          </datasources>
          <datasource-dependencies datasource='federated.13hpej81n3q4lw1ajqabb0ix7yp7'>
            <column-instance column='[show_id]' derivation='CountD' name='[ctd:show_id:qk]' pivot='key' type='quantitative' />
            <column caption='Listed In' datatype='string' name='[listed_in]' role='dimension' type='nominal' />
            <column-instance column='[listed_in]' derivation='None' name='[none:listed_in:nk]' pivot='key' type='nominal' />
            <column caption='Show Id' datatype='string' name='[show_id]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.13hpej81n3q4lw1ajqabb0ix7yp7].[none:listed_in:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNTD([show_id])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:listed_in:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.13hpej81n3q4lw1ajqabb0ix7yp7].[none:listed_in:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.13hpej81n3q4lw1ajqabb0ix7yp7].[ctd:show_id:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.13hpej81n3q4lw1ajqabb0ix7yp7].[none:listed_in:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.13hpej81n3q4lw1ajqabb0ix7yp7].[ctd:show_id:qk]' scope='cols' value='' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#ffffff' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-color' value='#ffffff' />
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#ffffff' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-color' scope='rows' value='#ffffff' />
            <format attr='line-visibility' scope='rows' value='on' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='stroke-color' scope='cols' value='#ffffff' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
          </style-rule>
          <style-rule element='title'>
            <format attr='border-width' value='1' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.13hpej81n3q4lw1ajqabb0ix7yp7].[ctd:show_id:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-color' value='#e50914' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.13hpej81n3q4lw1ajqabb0ix7yp7].[none:listed_in:nk]</rows>
        <cols>[federated.13hpej81n3q4lw1ajqabb0ix7yp7].[ctd:show_id:qk]</cols>
      </table>
      <simple-id uuid='{BA43CA67-6FE4-44D8-B8D6-4B4B871CAB7C}' />
    </worksheet>
    <worksheet name='Top Ratings'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='netflix_titles.csv+ (Multiple Connections)' name='federated.13hpej81n3q4lw1ajqabb0ix7yp7' />
          </datasources>
          <datasource-dependencies datasource='federated.13hpej81n3q4lw1ajqabb0ix7yp7'>
            <column caption='Total ratings' datatype='integer' name='[Calculation_497858872676581378]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([title])' />
            </column>
            <column caption='My_index' datatype='integer' name='[Calculation_497858872676974595]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INDEX()-1'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='My_total' datatype='integer' name='[Calculation_497858872677117956]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='WINDOW_MAX([Calculation_497858872676581378])'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='My_rank' datatype='integer' name='[Calculation_497858872677216261]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RANK_UNIQUE([Calculation_497858872677117956], &apos;asc&apos;)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Percentage' datatype='real' name='[Calculation_497858872677634057]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_497858872677117956]/[My_total (copy)_497858872677421062]'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='X' datatype='real' name='[Calculation_497858872677781514]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COS(RADIANS([Calculation_497858872676974595]*[Calculation_497858872677634057]))*[Calculation_497858872677216261]'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Y' datatype='real' name='[Calculation_497858872678019083]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SIN(RADIANS([Calculation_497858872676974595]*[Calculation_497858872677634057]))*[Calculation_497858872677216261]'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='My_total_max' datatype='integer' name='[My_total (copy)_497858872677421062]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='WINDOW_MAX([Calculation_497858872676581378])'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column aggregation='None' caption='Path' datatype='integer' name='[Value (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Value]' peg='0' size='1' />
            </column>
            <column datatype='integer' name='[Value]' role='measure' type='quantitative' />
            <column-instance column='[Value (bin)]' derivation='None' name='[none:Value (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[rating]' derivation='None' name='[none:rating:nk]' pivot='key' type='nominal' />
            <column caption='Rating' datatype='string' name='[rating]' role='dimension' type='nominal' />
            <column caption='Title' datatype='string' name='[title]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_497858872676581378]' derivation='User' name='[usr:Calculation_497858872676581378:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_497858872677781514]' derivation='User' name='[usr:Calculation_497858872677781514:qk:14]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[federated.13hpej81n3q4lw1ajqabb0ix7yp7].[Calculation_497858872676974595]' ordering-field='[federated.13hpej81n3q4lw1ajqabb0ix7yp7].[Value (bin)]' ordering-type='Field' />
              <table-calc field='[federated.13hpej81n3q4lw1ajqabb0ix7yp7].[Calculation_497858872677634057]' ordering-type='Rows' />
              <table-calc field='[federated.13hpej81n3q4lw1ajqabb0ix7yp7].[Calculation_497858872677117956]' ordering-field='[federated.13hpej81n3q4lw1ajqabb0ix7yp7].[Value (bin)]' ordering-type='Field' />
              <table-calc field='[federated.13hpej81n3q4lw1ajqabb0ix7yp7].[Calculation_497858872677216261]' ordering-field='[federated.13hpej81n3q4lw1ajqabb0ix7yp7].[rating]' ordering-type='Field' />
              <table-calc field='[federated.13hpej81n3q4lw1ajqabb0ix7yp7].[My_total (copy)_497858872677421062]' ordering-type='Field'>
                <order field='[federated.13hpej81n3q4lw1ajqabb0ix7yp7].[Value (bin)]' />
                <order field='[federated.13hpej81n3q4lw1ajqabb0ix7yp7].[rating]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_497858872678019083]' derivation='User' name='[usr:Calculation_497858872678019083:qk:14]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[federated.13hpej81n3q4lw1ajqabb0ix7yp7].[Calculation_497858872677216261]' ordering-field='[federated.13hpej81n3q4lw1ajqabb0ix7yp7].[rating]' ordering-type='Field' />
              <table-calc field='[federated.13hpej81n3q4lw1ajqabb0ix7yp7].[My_total (copy)_497858872677421062]' ordering-type='Field'>
                <order field='[federated.13hpej81n3q4lw1ajqabb0ix7yp7].[Value (bin)]' />
                <order field='[federated.13hpej81n3q4lw1ajqabb0ix7yp7].[rating]' />
              </table-calc>
              <table-calc field='[federated.13hpej81n3q4lw1ajqabb0ix7yp7].[Calculation_497858872677117956]' ordering-field='[federated.13hpej81n3q4lw1ajqabb0ix7yp7].[Value (bin)]' ordering-type='Field' />
              <table-calc field='[federated.13hpej81n3q4lw1ajqabb0ix7yp7].[Calculation_497858872677634057]' ordering-type='Rows' />
              <table-calc field='[federated.13hpej81n3q4lw1ajqabb0ix7yp7].[Calculation_497858872676974595]' ordering-field='[federated.13hpej81n3q4lw1ajqabb0ix7yp7].[Value (bin)]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.13hpej81n3q4lw1ajqabb0ix7yp7].[none:rating:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:rating:nk]' member='&quot;66 min&quot;' />
              <groupfilter function='member' level='[none:rating:nk]' member='&quot;74 min&quot;' />
              <groupfilter function='member' level='[none:rating:nk]' member='&quot;84 min&quot;' />
              <groupfilter function='member' level='[none:rating:nk]' member='&quot;G&quot;' />
              <groupfilter function='member' level='[none:rating:nk]' member='&quot;NC-17&quot;' />
              <groupfilter function='member' level='[none:rating:nk]' member='&quot;NR&quot;' />
              <groupfilter function='member' level='[none:rating:nk]' member='&quot;PG&quot;' />
              <groupfilter function='member' level='[none:rating:nk]' member='&quot;PG-13&quot;' />
              <groupfilter function='member' level='[none:rating:nk]' member='&quot;R&quot;' />
              <groupfilter function='member' level='[none:rating:nk]' member='&quot;TV-14&quot;' />
              <groupfilter function='member' level='[none:rating:nk]' member='&quot;TV-G&quot;' />
              <groupfilter function='member' level='[none:rating:nk]' member='&quot;TV-MA&quot;' />
              <groupfilter function='member' level='[none:rating:nk]' member='&quot;TV-PG&quot;' />
              <groupfilter function='member' level='[none:rating:nk]' member='&quot;TV-Y&quot;' />
              <groupfilter function='member' level='[none:rating:nk]' member='&quot;TV-Y7&quot;' />
              <groupfilter function='member' level='[none:rating:nk]' member='&quot;TV-Y7-FV&quot;' />
              <groupfilter function='member' level='[none:rating:nk]' member='&quot;UR&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.13hpej81n3q4lw1ajqabb0ix7yp7].[usr:Calculation_497858872676581378:qk]' included-values='in-range'>
            <min>100</min>
            <max>8803</max>
          </filter>
          <slices>
            <column>[federated.13hpej81n3q4lw1ajqabb0ix7yp7].[none:rating:nk]</column>
            <column>[federated.13hpej81n3q4lw1ajqabb0ix7yp7].[usr:Calculation_497858872676581378:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.13hpej81n3q4lw1ajqabb0ix7yp7].[usr:Calculation_497858872677781514:qk:14]' scope='rows' value='false' />
            <format attr='display' class='0' field='[federated.13hpej81n3q4lw1ajqabb0ix7yp7].[usr:Calculation_497858872678019083:qk:14]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#ffffff' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width-header' value='52' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#ffffff' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#ffffff' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-visibility' scope='rows' value='on' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='stroke-color' scope='rows' value='#ffffff' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-color' scope='cols' value='#ffffff' />
          </style-rule>
          <style-rule element='title'>
            <format attr='border-width' value='1' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.13hpej81n3q4lw1ajqabb0ix7yp7].[none:rating:nk]' />
              <text column='[federated.13hpej81n3q4lw1ajqabb0ix7yp7].[none:rating:nk]' />
              <text column='[federated.13hpej81n3q4lw1ajqabb0ix7yp7].[usr:Calculation_497858872676581378:qk]' />
              <path column='[federated.13hpej81n3q4lw1ajqabb0ix7yp7].[none:Value (bin):ok]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[federated.13hpej81n3q4lw1ajqabb0ix7yp7].[usr:Calculation_497858872676581378:qk]</run>
                <run>&gt; &lt;</run>
                <run>[federated.13hpej81n3q4lw1ajqabb0ix7yp7].[none:rating:nk]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='4.0442090034484863' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='line-ends' />
                <format attr='mark-labels-line-last' value='false' />
                <format attr='mark-color' value='#59a14f' />
                <format attr='mark-transparency' value='255' />
                <format attr='mark-markers-mode' value='auto' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.13hpej81n3q4lw1ajqabb0ix7yp7].[usr:Calculation_497858872677781514:qk:14]</rows>
        <cols>[federated.13hpej81n3q4lw1ajqabb0ix7yp7].[usr:Calculation_497858872678019083:qk:14]</cols>
        <show-full-range>
          <column>[federated.13hpej81n3q4lw1ajqabb0ix7yp7].[Value (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{DB3A3A22-CE54-4AE1-ACE5-9B713AD39FC8}' />
    </worksheet>
    <worksheet name='Total shows by country'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='netflix_titles.csv+ (Multiple Connections)' name='federated.13hpej81n3q4lw1ajqabb0ix7yp7' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.13hpej81n3q4lw1ajqabb0ix7yp7'>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[show_id]' derivation='CountD' name='[ctd:show_id:qk]' pivot='key' type='quantitative' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column caption='Show Id' datatype='string' name='[show_id]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.13hpej81n3q4lw1ajqabb0ix7yp7].[none:country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:country:nk]' member='&quot;, France, Algeria&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;, South Korea&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Argentina&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Argentina, Brazil, France, Poland, Germany, Denmark&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Argentina, Chile&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Argentina, Chile, Peru&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Argentina, France&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Argentina, France, United States, Germany, Qatar&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Argentina, Italy&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Argentina, Spain&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Argentina, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Argentina, United States, Mexico&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Argentina, Uruguay, Serbia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Argentina, Uruguay, Spain, France&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Argentina, Venezuela&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Australia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Australia, Armenia, Japan, Jordan, Mexico, Mongolia, New Zealand, Philippines, South Africa, Sweden, United States, Uruguay&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Australia, Canada&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Australia, France&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Australia, France, Ireland&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Australia, Germany&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Australia, India&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Australia, Iraq&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Australia, New Zealand&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Australia, New Zealand, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Australia, United Arab Emirates&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Australia, United Kingdom&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Australia, United Kingdom, Canada&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Australia, United Kingdom, United Arab Emirates, Canada&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Australia, United Kingdom, United States, New Zealand, Italy, France&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Australia, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Austria&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Austria, Czech Republic&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Austria, Germany&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Austria, Iraq, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Austria, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Bangladesh&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Belarus&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Belgium&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Belgium, France&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Belgium, France, Netherlands&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Belgium, Ireland, Netherlands, Germany, Afghanistan&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Belgium, Netherlands&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Belgium, United Kingdom&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Belgium, United Kingdom, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Brazil, France&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Brazil, France, Germany&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Brazil, India, China, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Brazil, Netherlands, United States, Colombia, Austria, Germany&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Brazil, United Kingdom&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Brazil, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Bulgaria&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Bulgaria, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Bulgaria, United States, Spain, Canada&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Cambodia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Cambodia, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Cameroon&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada, Australia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada, Belgium&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada, Brazil&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada, France&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada, France, Italy, Morocco, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada, France, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada, Germany&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada, Germany, France, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada, Germany, South Africa&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada, Hungary, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada, India&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada, India, Thailand, United States, United Arab Emirates&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada, Ireland, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada, Japan, Netherlands&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada, Japan, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada, Luxembourg&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada, Mexico, Germany, South Africa&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada, Nigeria&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada, Nigeria, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada, Norway&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada, South Africa&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada, South Korea, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada, Spain&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada, Spain, France&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada, United Kingdom&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada, United Kingdom, Netherlands&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada, United Kingdom, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada, United States, Cayman Islands&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada, United States, Denmark&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada, United States, France&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada, United States, Germany&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada, United States, India, United Kingdom&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada, United States, Ireland&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada, United States, Mexico&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada, United States, United Kingdom&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada, United States, United Kingdom, France, Luxembourg&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Chile&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Chile, Argentina&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Chile, Argentina, France, Spain, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Chile, Brazil&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Chile, France&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Chile, Italy&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Chile, Peru&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Chile, Spain, Argentina, Germany&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Chile, United States, France&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;China, Canada, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;China, Germany, India, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;China, Hong Kong&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;China, Hong Kong, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;China, India, Nepal&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;China, Japan&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;China, Morocco, Hong Kong&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;China, South Korea, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;China, Spain, South Korea, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;China, Taiwan&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;China, United Kingdom&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;China, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;China, United States, Australia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;China, United States, Canada&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;China, United States, United Kingdom&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Colombia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Colombia, Mexico&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Colombia, Mexico, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Colombia, Peru, United Kingdom&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Colombia, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Croatia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Croatia, Slovenia, Serbia, Montenegro&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Cyprus&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Czech Republic, France&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Czech Republic, Slovakia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Czech Republic, United Kingdom, France&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Czech Republic, United Kingdom, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Czech Republic, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Denmark&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Denmark, Brazil, France, Portugal, Sweden&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Denmark, China&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Denmark, France, Belgium, Italy, Netherlands, United States, United Kingdom&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Denmark, France, Poland&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Denmark, France, United States, Sweden&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Denmark, Germany, Belgium, United Kingdom, France&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Denmark, Germany, Belgium, United Kingdom, France, Sweden&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Denmark, Indonesia, Finland, Norway, United Kingdom, Israel, France, United States, Germany, Netherlands&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Denmark, Singapore, Canada, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Denmark, Spain&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Denmark, Sweden, Israel, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Denmark, United Kingdom, South Africa, Sweden, Belgium&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Denmark, United Kingdom, Sweden&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Denmark, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Denmark, Zimbabwe&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Egypt&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Egypt, Algeria&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Egypt, Austria, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Egypt, Denmark, Germany&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Egypt, France&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Egypt, Saudi Arabia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Finland&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Finland, France&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Finland, Germany&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Finland, Germany, Belgium&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Finland, Sweden, Norway, Latvia, Germany&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Finland, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;France, Algeria&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;France, Australia, Germany&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;France, Belgium&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;France, Belgium, China, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;France, Belgium, Italy&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;France, Belgium, Luxembourg, Cambodia,&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;France, Belgium, Luxembourg, Romania, Canada, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;France, Belgium, Spain&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;France, Belgium, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;France, Brazil, Spain, Belgium&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;France, Canada&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;France, Canada, Belgium&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;France, Canada, China, Cambodia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;France, Canada, Italy, United States, China&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;France, Canada, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;France, Canada, United States, Spain&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;France, China, Japan, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;France, Egypt&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;France, Germany&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;France, Germany, Czech Republic, Belgium&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;France, Germany, Switzerland&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;France, Iran, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;France, Israel, Germany, United States, United Kingdom&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;France, Japan&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;France, Japan, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;France, Lebanon&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;France, Lebanon, United Kingdom&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;France, Luxembourg, Canada&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;France, Luxembourg, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;France, Malta, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;France, Morocco&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;France, Netherlands, Singapore&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;France, Netherlands, South Africa, Finland&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;France, New Zealand&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;France, Norway, Lebanon, Belgium&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;France, Qatar&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;France, Senegal, Belgium&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;France, South Korea, Japan&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;France, South Korea, Japan, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;France, Switzerland, Spain, United States, United Arab Emirates&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;France, United Kingdom&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;France, United Kingdom, India&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;France, United Kingdom, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;France, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;France, United States, Canada&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;France, United States, Mexico&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;France, United States, United Kingdom, Canada&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Georgia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Georgia, Germany, France&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Germany, Australia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Germany, Australia, France, China&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Germany, Belgium&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Germany, Canada, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Germany, China, United Kingdom&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Germany, Czech Republic&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Germany, France&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Germany, France, Luxembourg, United Kingdom, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Germany, France, Russia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Germany, France, United States, Canada, United Kingdom&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Germany, Italy&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Germany, Jordan, Netherlands&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Germany, Sri Lanka&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Germany, United Kingdom&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Germany, United Kingdom, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Germany, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Germany, United States, Canada&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Germany, United States, France&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Germany, United States, Hong Kong, Singapore&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Germany, United States, Italy&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Germany, United States, Sweden&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Germany, United States, United Kingdom, Canada&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Ghana&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Ghana, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Greece, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Guatemala&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Hong Kong&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Hong Kong, Canada, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Hong Kong, China&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Hong Kong, China, Singapore&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Hong Kong, China, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Hong Kong, Iceland, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Hong Kong, Taiwan&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Hong Kong, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Hungary&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Hungary, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Iceland&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Iceland, Sweden, Belgium&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;India, Australia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;India, Canada&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;India, France&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;India, Germany&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;India, Germany, Austria&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;India, Germany, France&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;India, Iran&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;India, Japan&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;India, Malaysia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;India, Mexico&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;India, Nepal&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;India, Pakistan&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;India, Soviet Union&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;India, Switzerland&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;India, Turkey&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;India, United Kingdom&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;India, United Kingdom, Canada, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;India, United Kingdom, China, Canada, Japan, South Korea, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;India, United Kingdom, France, Qatar&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;India, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Indonesia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Indonesia, Netherlands&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Indonesia, Singapore&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Indonesia, South Korea, Singapore&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Indonesia, United Kingdom&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Indonesia, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Iran, France&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Ireland&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Ireland, Canada&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Ireland, Canada, Luxembourg, United States, United Kingdom, Philippines, India&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Ireland, Canada, United Kingdom, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Ireland, Canada, United States, United Kingdom&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Ireland, France, Iceland, United States, Mexico, Belgium, United Kingdom, Hong Kong&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Ireland, Luxembourg, Belgium&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Ireland, South Africa&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Ireland, Switzerland, United Kingdom, France, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Ireland, United Kingdom&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Ireland, United Kingdom, France, Germany&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Ireland, United Kingdom, Greece, France, Netherlands&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Ireland, United Kingdom, Italy, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Ireland, United Kingdom, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Ireland, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Ireland, United States, France&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Ireland, United States, United Kingdom&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Israel&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Israel, Germany&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Israel, Germany, France&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Israel, Germany, Poland, Luxembourg, Belgium, France, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Israel, Sweden, Germany, Netherlands&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Israel, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Italy, Belgium&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Italy, Brazil, Greece&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Italy, Canada, France&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Italy, France&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Italy, France, Switzerland&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Italy, Germany&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Italy, India&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Italy, South Africa, West Germany, Australia, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Italy, Switzerland, Albania, Poland&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Italy, Switzerland, France, Germany&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Italy, Turkey&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Italy, United Kingdom&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Italy, United Kingdom, France&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Italy, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Italy, United States, Argentina&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Jamaica, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Japan&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Japan, Canada&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Japan, Canada, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Japan, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Jordan&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Kenya&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Kenya, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Kuwait&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Kuwait, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Lebanon&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Lebanon, Canada, France&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Lebanon, France&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Lebanon, Palestine, Denmark, Qatar&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Lebanon, Qatar&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Lebanon, Syria&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Lebanon, United Arab Emirates&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Lebanon, United Arab Emirates, France, Switzerland, Germany&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Lebanon, United States, United Arab Emirates&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Luxembourg&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Malaysia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Malaysia, Singapore, Hong Kong&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Mauritius&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Mauritius, South Africa&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Mexico, Argentina&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Mexico, Brazil&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Mexico, Finland&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Mexico, France&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Mexico, France, Colombia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Mexico, Netherlands&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Mexico, Spain&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Mexico, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Mexico, United States, Spain, Colombia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Mozambique&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Namibia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Netherlands&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Netherlands, Belgium&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Netherlands, Belgium, Germany, Jordan&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Netherlands, Belgium, United Kingdom, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Netherlands, Denmark, France, Germany&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Netherlands, Denmark, South Africa&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Netherlands, Germany, Denmark, United Kingdom&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Netherlands, Germany, Italy, Canada&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Netherlands, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;New Zealand&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;New Zealand, Australia, France, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;New Zealand, United Kingdom&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;New Zealand, United Kingdom, Australia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;New Zealand, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Nigeria&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Nigeria, United Kingdom&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Norway&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Norway, Denmark&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Norway, Denmark, Netherlands, Sweden&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Norway, Denmark, Sweden&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Norway, Germany&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Norway, Germany, Sweden&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Norway, Iceland, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Norway, Sweden&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Norway, United Kingdom, France, Ireland&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Norway, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Pakistan&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Pakistan, Norway, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Pakistan, United Arab Emirates&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Pakistan, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Paraguay, Argentina&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Peru&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Peru, Germany, Norway&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Peru, United States, United Kingdom&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Philippines&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Philippines, Canada, United Kingdom, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Philippines, Qatar&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Philippines, Singapore&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Philippines, Singapore, Indonesia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Philippines, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Poland&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Poland,&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Poland, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Poland, West Germany&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Portugal, France, Poland, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Portugal, Spain&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Portugal, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Puerto Rico, United States, Colombia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Romania&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Romania, Bulgaria, Hungary&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Romania, France, Switzerland, Germany&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Romania, United Kingdom&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Romania, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Russia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Russia, Poland, Serbia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Russia, Spain&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Russia, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Russia, United States, China&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Saudi Arabia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Saudi Arabia, Netherlands, Germany, Jordan, United Arab Emirates, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Saudi Arabia, Syria, Egypt, Lebanon, Kuwait&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Saudi Arabia, United Arab Emirates&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Senegal&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Serbia, South Korea, Slovenia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Serbia, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Singapore&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Singapore, France&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Singapore, Japan, France&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Singapore, Malaysia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Singapore, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Slovenia, Croatia, Germany, Czech Republic, Qatar&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Somalia, Kenya, Sudan, South Africa, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;South Africa&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;South Africa, Angola&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;South Africa, China, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;South Africa, Germany, Netherlands, France&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;South Africa, Nigeria&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;South Africa, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;South Africa, United States, Germany&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;South Africa, United States, Japan&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;South Africa, United States, New Zealand, Canada&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;South Korea&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;South Korea, Canada, United States, China&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;South Korea, China&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;South Korea, China, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;South Korea, Czech Republic&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;South Korea, France&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;South Korea, Japan&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;South Korea, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Soviet Union, India&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Spain&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Spain, Argentina&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Spain, Belgium&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Spain, Belgium, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Spain, Canada, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Spain, Colombia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Spain, Cuba&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Spain, France&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Spain, France, Canada&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Spain, France, Canada, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Spain, France, Italy&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Spain, France, United Kingdom, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Spain, France, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Spain, France, Uruguay&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Spain, Germany&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Spain, Germany, Denmark, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Spain, Italy&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Spain, Italy, Argentina&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Spain, Mexico&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Spain, Mexico, France&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Spain, Portugal&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Spain, Switzerland&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Spain, Thailand, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Spain, United Kingdom&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Spain, United Kingdom, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Spain, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Sweden&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Sweden, Czech Republic, United Kingdom, Denmark, Netherlands&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Sweden, Netherlands&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Sweden, United Kingdom, Finland&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Sweden, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Switzerland&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Switzerland, France&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Switzerland, France, Belgium, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Switzerland, United Kingdom, Australia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Switzerland, United Kingdom, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Switzerland, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Switzerland, Vatican City, Italy, Germany, France&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Syria, France, Lebanon, Qatar&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Taiwan&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Taiwan, China&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Taiwan, China, France, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Taiwan, Hong Kong, United States, China&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Taiwan, Malaysia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Thailand&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Thailand, Canada, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Thailand, China, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Thailand, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Turkey&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Turkey, Azerbaijan&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Turkey, France, Germany, Poland&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Turkey, India&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Turkey, South Korea&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Turkey, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Ukraine&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Arab Emirates&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Arab Emirates, Jordan&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Arab Emirates, Jordan, Lebanon, Saudi Arabia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Arab Emirates, Romania&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Arab Emirates, United Kingdom, India&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Arab Emirates, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Arab Emirates, United States, United Kingdom&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom,&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Australia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Australia, Canada, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Australia, France&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Australia, France, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Australia, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Belgium&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Belgium, Sweden&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Brazil, Germany&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Canada&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Canada, France, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Canada, Italy&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Canada, Japan&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Canada, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Canada, United States, Cayman Islands&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Canada, United States, Germany&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, China&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, China, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, China, United States, India&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Czech Republic, Germany, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Czech Republic, United States, Germany, Bahamas&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Denmark, Canada, Croatia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Egypt, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Finland, Germany, United States, Australia, Japan, France, Ireland&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, France&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, France, Belgium&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, France, Belgium, Canada, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, France, Belgium, Ireland, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, France, Belgium, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, France, Canada, Belgium, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, France, Germany&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, France, Germany, Spain&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, France, Germany, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, France, Poland, Germany, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, France, Spain, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, France, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, France, United States, Belgium&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, France, United States, Belgium, Luxembourg, China, Germany&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Germany&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Germany, Canada&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Germany, Canada, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Germany, France, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Germany, Spain, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Germany, United Arab Emirates, New Zealand&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Germany, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Germany, United States, France&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Hong Kong&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Hungary, Australia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, India&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, India, Sweden&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, India, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Ireland&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Ireland, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Israel, Russia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Italy&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Italy, Israel, Peru, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Japan&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Japan, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Jordan, Qatar, Iran&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Kenya&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Lithuania&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Malawi&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Namibia, South Africa, Zimbabwe, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, New Zealand&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Nigeria&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Norway, Denmark, Germany, Sweden&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Pakistan&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Poland&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Poland, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Russia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Russia, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Singapore&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, South Africa&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, South Africa, Australia, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, South Africa, France&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, South Korea&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Spain&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Spain, Belgium&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Spain, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Spain, United States, Germany&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Thailand&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, Ukraine, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, United States, Australia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, United States, Canada&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, United States, Czech Republic&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, United States, Dominican Republic&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, United States, France&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, United States, France, Germany&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, United States, France, Italy&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, United States, Germany, Denmark, Belgium, Japan&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, United States, Ireland&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, United States, Japan&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, United States, Morocco&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, United States, Spain, Germany, Greece, Canada&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom, West Germany&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States,&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Argentina&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Australia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Australia, China&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Australia, Mexico&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Australia, Samoa, United Kingdom&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Australia, South Africa, United Kingdom&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Belgium, Canada, France&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Bermuda, Ecuador&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Botswana&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Brazil&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Brazil, India, Uganda, China&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Brazil, Japan, Spain, India&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Brazil, South Korea, Mexico, Japan, Germany&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Bulgaria&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Cambodia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Cambodia, Romania&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Canada&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Canada, Belgium, United Kingdom&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Canada, China&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Canada, France&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Canada, Germany&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Canada, Indonesia, United Kingdom, China, Singapore&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Canada, Ireland&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Canada, Japan, Panama&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Canada, United Kingdom&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Chile&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Chile, Israel&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, China&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, China, Canada&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, China, Colombia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, China, Hong Kong&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, China, United Kingdom&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Colombia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Colombia, Mexico&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Czech Republic&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Czech Republic, United Kingdom&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Denmark&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, East Germany, West Germany&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, France&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, France, Canada&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, France, Canada, Belgium&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, France, Canada, Lebanon, Qatar&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, France, Canada, Spain&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, France, Denmark&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, France, Italy, United Kingdom&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, France, Japan&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, France, Mexico&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, France, Serbia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, France, South Korea, Indonesia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, France, United Kingdom&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, France, United Kingdom, Japan&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Germany&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Germany, Australia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Germany, Canada&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Germany, Mexico&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Germany, United Kingdom&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Germany, United Kingdom, Australia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Germany, United Kingdom, Italy&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Ghana, Burkina Faso, United Kingdom, Germany, Ethiopia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Greece&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Greece, Brazil&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Greece, United Kingdom&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Hong Kong&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Hungary&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Hungary, Ireland, Canada&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Iceland&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, India&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, India, Bangladesh&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, India, France&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, India, South Korea, China&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, India, United Arab Emirates&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, India, United Kingdom&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Indonesia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Ireland&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Ireland, United Kingdom, India&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Israel, Italy, South Africa&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Israel, United Kingdom, Canada&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Italy&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Italy, France, Japan&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Italy, Romania, United Kingdom&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Italy, United Kingdom, Liechtenstein&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Japan&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Japan, Canada&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Kazakhstan&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Malta, France, United Kingdom&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Mexico&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Mexico, Colombia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Mexico, Spain, Malta&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Morocco&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Netherlands, Japan, France&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, New Zealand&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, New Zealand, Japan&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, New Zealand, United Kingdom&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Nicaragua&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Nigeria&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Norway, Canada&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Philippines&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Poland&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Russia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Senegal&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Singapore&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, South Africa&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, South Korea&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, South Korea, China&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, South Korea, Japan&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Spain&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Spain, Germany&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Sweden&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Sweden, Norway&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Switzerland&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Taiwan&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Thailand&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, United Arab Emirates&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, United Kingdom&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, United Kingdom, Australia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, United Kingdom, Canada&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, United Kingdom, Canada, China&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, United Kingdom, Canada, Japan&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, United Kingdom, Denmark, Sweden&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, United Kingdom, France&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, United Kingdom, France, Germany, Japan&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, United Kingdom, Germany&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, United Kingdom, Germany, Hungary&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, United Kingdom, India&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, United Kingdom, Italy&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, United Kingdom, Japan&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, United Kingdom, Morocco&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, United Kingdom, New Zealand&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, United Kingdom, Spain, South Korea&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Uruguay&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;United States, Venezuela&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Uruguay&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Uruguay, Argentina&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Uruguay, Argentina, Germany, Spain&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Uruguay, Argentina, Spain&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Uruguay, Germany&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Uruguay, Guatemala&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Uruguay, Spain, Mexico&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Venezuela&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Venezuela, Colombia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Vietnam&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;West Germany&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Zimbabwe&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.13hpej81n3q4lw1ajqabb0ix7yp7].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.13hpej81n3q4lw1ajqabb0ix7yp7].[Longitude (generated)]' field-type='quantitative' max='28556422.600220896' min='-18563031.902318094' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.13hpej81n3q4lw1ajqabb0ix7yp7].[Latitude (generated)]' field-type='quantitative' max='12548088.85336742' min='-17195087.744892333' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#ffffff' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-color' value='#ffffff' />
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.13hpej81n3q4lw1ajqabb0ix7yp7].[ctd:show_id:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#efd8d9</color>
                <color>#eec0c3</color>
                <color>#eda8ac</color>
                <color>#ec9195</color>
                <color>#eb7a7f</color>
                <color>#e96369</color>
                <color>#e84c54</color>
                <color>#e7353e</color>
                <color>#e61f29</color>
                <color>#e50914</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#ffffff' />
            <format attr='background-color' value='#000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-color' scope='rows' value='#ffffff' />
            <format attr='line-visibility' scope='rows' value='on' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='stroke-color' scope='cols' value='#ffffff' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
          </style-rule>
          <style-rule element='title'>
            <format attr='border-width' value='1' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#ffffff' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.13hpej81n3q4lw1ajqabb0ix7yp7].[ctd:show_id:qk]' value='Distinct count of Show Id'>
              <formatted-text>
                <run fontcolor='#ffffff'>Distinct count of Show Id</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='dark' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.13hpej81n3q4lw1ajqabb0ix7yp7].[ctd:show_id:qk]' />
              <text column='[federated.13hpej81n3q4lw1ajqabb0ix7yp7].[ctd:show_id:qk]' />
              <lod column='[federated.13hpej81n3q4lw1ajqabb0ix7yp7].[none:country:nk]' />
              <geometry column='[federated.13hpej81n3q4lw1ajqabb0ix7yp7].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-color' value='#00a8e1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.13hpej81n3q4lw1ajqabb0ix7yp7].[Latitude (generated)]</rows>
        <cols>[federated.13hpej81n3q4lw1ajqabb0ix7yp7].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{5C807E6B-6A3F-41CC-9819-B5828C5BF222}' />
    </worksheet>
    <worksheet name='Type'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='netflix_titles.csv+ (Multiple Connections)' name='federated.13hpej81n3q4lw1ajqabb0ix7yp7' />
          </datasources>
          <datasource-dependencies datasource='federated.13hpej81n3q4lw1ajqabb0ix7yp7'>
            <column-instance column='[title]' derivation='None' name='[none:title:nk]' pivot='key' type='nominal' />
            <column-instance column='[type]' derivation='None' name='[none:type:nk]' pivot='key' type='nominal' />
            <column caption='Title' datatype='string' name='[title]' role='dimension' type='nominal' />
            <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.13hpej81n3q4lw1ajqabb0ix7yp7].[none:title:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:title:nk]' member='&quot;1 Chance 2 Dance&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.13hpej81n3q4lw1ajqabb0ix7yp7].[none:title:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#ffffff' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-color' value='#ffffff' />
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#ffffff' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-color' scope='rows' value='#ffffff' />
            <format attr='line-visibility' scope='rows' value='on' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='stroke-color' scope='cols' value='#ffffff' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
          </style-rule>
          <style-rule element='title'>
            <format attr='border-width' value='1' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#ffffff' />
          </style-rule>
          <_.fcp.IndividualControlFormatting.true...style-rule element='quick-filter'>
            <_.fcp.IndividualControlFormatting.true...format attr='color' field='[federated.13hpej81n3q4lw1ajqabb0ix7yp7].[none:title:nk]' value='#000000' />
          </_.fcp.IndividualControlFormatting.true...style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.13hpej81n3q4lw1ajqabb0ix7yp7].[none:type:nk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontsize='10'>Type</run>
                <run><![CDATA[
<[federated.13hpej81n3q4lw1ajqabb0ix7yp7].[none:type:nk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-color' value='#00a8e1' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{024B398E-A98B-4DB7-956E-E692A3D37806}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#ffffff' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='netflix_titles.csv+ (Multiple Connections)' name='federated.13hpej81n3q4lw1ajqabb0ix7yp7' />
      </datasources>
      <datasource-dependencies datasource='federated.13hpej81n3q4lw1ajqabb0ix7yp7'>
        <column-instance column='[title]' derivation='None' name='[none:title:nk]' pivot='key' type='nominal' />
        <column caption='Title' datatype='string' name='[title]' role='dimension' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97962' id='20' param='horz' type-v2='layout-flow' w='98910' x='545' y='1019'>
            <zone h='97962' id='5' type-v2='layout-basic' w='98910' x='545' y='1019'>
              <zone h='42824' id='3' name='Top Ratings' w='32972' x='66483' y='7176'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48981' id='9' name='Shows by release year and type' w='32947' x='66508' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48981' id='11' name='Shows by type' w='33016' x='33492' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48981' id='12' name='Top 10 genre' w='32947' x='545' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='42824' id='13' name='Total shows by country' w='32968' x='545' y='7176'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='24491' id='17' is-scaled='1' param='/Users/juancarlosfazleal/Downloads/Logonetflix.png' type-v2='bitmap' w='32970' x='33513' y='25509'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='12246' id='18' name='Description' show-title='false' w='32970' x='33513' y='13263'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6123' id='22' name='Cast' show-title='false' w='32970' x='33513' y='7140'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6121' id='21' mode='dropdown' name='Description' param='[federated.13hpej81n3q4lw1ajqabb0ix7yp7].[none:title:nk]' show-all='false' type-v2='filter' w='32970' x='33513' y='1019'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6157' id='23' name='Type' show-title='false' w='16484' x='545' y='1019'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6157' id='24' name='Genre' show-title='false' w='16484' x='17029' y='1019'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6157' id='25' name='Release year' show-title='false' w='16487' x='82968' y='1019'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6157' id='26' name='Duration' show-title='false' w='16485' x='66483' y='1019'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='2050' minheight='2050' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='30' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97962' id='29' param='vert' type-v2='layout-flow' w='98910' x='545' y='1019'>
                <zone fixed-size='41' h='6157' id='23' is-fixed='true' name='Type' show-title='false' w='16484' x='545' y='1019'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='41' h='6157' id='24' is-fixed='true' name='Genre' show-title='false' w='16484' x='17029' y='1019'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='41' h='6157' id='26' is-fixed='true' name='Duration' show-title='false' w='16485' x='66483' y='1019'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='41' h='6157' id='25' is-fixed='true' name='Release year' show-title='false' w='16487' x='82968' y='1019'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='41' h='6123' id='22' is-fixed='true' name='Cast' show-title='false' w='32970' x='33513' y='7140'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='42824' id='13' is-fixed='true' name='Total shows by country' w='32968' x='545' y='7176'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='42824' id='3' is-fixed='true' name='Top Ratings' w='32972' x='66483' y='7176'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6121' id='21' mode='dropdown' name='Description' param='[federated.13hpej81n3q4lw1ajqabb0ix7yp7].[none:title:nk]' show-all='false' type-v2='filter' w='32970' x='33513' y='1019'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='90' h='12246' id='18' is-fixed='true' name='Description' show-title='false' w='32970' x='33513' y='13263'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='188' h='24491' id='17' is-fixed='true' is-scaled='1' param='/Users/juancarlosfazleal/Downloads/Logonetflix.png' type-v2='bitmap' w='32970' x='33513' y='25509'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48981' id='12' is-fixed='true' name='Top 10 genre' w='32947' x='545' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48981' id='11' is-fixed='true' name='Shows by type' w='33016' x='33492' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48981' id='9' is-fixed='true' name='Shows by release year and type' w='32947' x='66508' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{0CA36BB2-E266-4778-91FC-909009BE107B}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Top Ratings'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.13hpej81n3q4lw1ajqabb0ix7yp7].[none:rating:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{5D08B861-E656-4F57-B00D-D9FA5051FC01}' />
    </window>
    <window class='worksheet' name='Shows by type'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{3D695717-67E1-4B98-BA47-CA5F5BE0BFE5}' />
    </window>
    <window class='worksheet' name='Shows by release year and type'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.13hpej81n3q4lw1ajqabb0ix7yp7].[none:type:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{BA16E5CC-B50F-45B2-859B-8C0A3A4D7721}' />
    </window>
    <window class='worksheet' name='Top 10 genre'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{EBC38D8D-1DCC-4409-8D5A-44DD51DFFDE6}' />
    </window>
    <window class='worksheet' name='Total shows by country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.13hpej81n3q4lw1ajqabb0ix7yp7].[ctd:show_id:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{DA68EF14-20DF-4FD8-9B97-53E158F38EF3}' />
    </window>
    <window class='worksheet' name='Description'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.13hpej81n3q4lw1ajqabb0ix7yp7].[none:title:nk]' show-all='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{3A9B700A-0849-4C15-8906-5AD1CED7D183}' />
    </window>
    <window class='worksheet' name='Cast'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{97EA6E4B-D490-4E85-842D-EC0EA5550A59}' />
    </window>
    <window class='worksheet' name='Release year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{D6F09BE3-7074-41A6-BD5A-E29436CFE33E}' />
    </window>
    <window class='worksheet' name='Duration'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{81ED479E-7016-48BE-9D41-E22B8B9916A0}' />
    </window>
    <window class='worksheet' name='Genre'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{C0F43840-0E9A-4DDD-85C4-0853832E4241}' />
    </window>
    <window class='worksheet' name='Type'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{3F8B0811-C493-4673-ACE3-B4881E34F92A}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Cast'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Description'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Duration'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Genre'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Release year'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Shows by release year and type'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Shows by type'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Top 10 genre'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Top Ratings'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total shows by country'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Type'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{E1BFF6C0-AB9A-4D82-966E-A4B8DC833EDF}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Dashboard 1' width='384'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
